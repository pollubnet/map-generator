@using MapGenerator.MapGenerators.Views.Data;
@using MapGenerator.MapGenerators.Data;

<div id="content">
    @if (Map != null && MapDisplayData != null)
    {
        <table>
        @for (int y = 0; y < Map.Grid.GetLength(1); y++)
        {
            <tr>
                @for (int x = 0; x < Map.Grid.GetLength(0); x++)
                {
                    @if (MapDisplayData.TileInformationDisplay == TileInformationDisplay.Position)
                    {
                        <td style='background: @GetTileColor(@Map.Grid[x,y])'>x:@x<br />y:@y</td>
                    }
                    else if (MapDisplayData.TileInformationDisplay == TileInformationDisplay.Noise)
                    {
                        <td style="background: @GetTileColor(@Map.Grid[x,y])">@Math.Round(Map.Grid[x, y].NoiseValue, 2)</td>
                    }
                    else if (MapDisplayData.TileInformationDisplay == TileInformationDisplay.None)
                    {
                        <td style='background: @GetTileColor(@Map.Grid[x,y])'></td>
                    }
                }
            </tr>
        }
        </table>
    }
</div>

@code {
    [Parameter]
    public MapData? Map { get; set; }
    [Parameter]
    public MapDisplayData? MapDisplayData { get; set; }

    private string GetTileColor(Node node)
    {
        if (MapDisplayData!.ShowColorMap)
        {
            return node.Color;
        }

        string hexValue = string.Format("{0:x}", (int)(node.NoiseValue * 255));
        if (hexValue.Length == 1)
        {
            hexValue = "0" + hexValue;
        }
        return $"#{hexValue}{hexValue}{hexValue}";
    }
}
